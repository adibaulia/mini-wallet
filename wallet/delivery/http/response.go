package http

import (
	"mini-wallet/domain"
	"time"
)

type (
	response struct {
		Status  string      `json:"status"`
		Data    interface{} `json:"data,omitempty"`
		Message string      `json:"message,omitempty"`
		Code    int         `json:"code,omitempty"`
	}

	walletResponse struct {
		ID        string              `json:"id"`
		OwnedBy   string              `json:"owned_by"`
		Status    domain.WalletStatus `json:"status"`
		EnabledAt time.Time           `json:"enabled_at"`
		Balance   int64               `json:"balance"`
	}

	withdrawResponse struct {
		ID          string    `json:"id"`
		WithdrawnBy string    `json:"withdrawn_by"`
		Status      string    `json:"status"`
		WithdrawnAt time.Time `json:"withdrawn_at"`
		Amount      int64     `json:"amount"`
		ReferenceID string    `json:"reference_id"`
	}
	// Generated by https://quicktype.io

	depositResponse struct {
		ID          string    `json:"id"`
		DepositedBy string    `json:"deposited_by"`
		Status      string    `json:"status"`
		DepositedAt time.Time `json:"deposited_at"`
		Amount      int64     `json:"amount"`
		ReferenceID string    `json:"reference_id"`
	}
)

func walletResponseDTO(wallet *domain.Wallet) *walletResponse {
	return &walletResponse{
		ID:        wallet.ID,
		OwnedBy:   wallet.OwnedBy,
		Status:    wallet.Status,
		EnabledAt: wallet.EnabledAt,
		Balance:   wallet.Balance,
	}
}

func withdrawResponseDTO(wallet *domain.Wallet, refID string, amount int64) *withdrawResponse {
	return &withdrawResponse{
		ID:          wallet.ID,
		WithdrawnBy: wallet.OwnedBy,
		Status:      "success",
		WithdrawnAt: time.Now(),
		Amount:      amount,
		ReferenceID: refID,
	}
}

func depositResponseDTO(wallet *domain.Wallet, refID string, amount int64) *depositResponse {
	return &depositResponse{
		ID:          wallet.ID,
		DepositedBy: wallet.OwnedBy,
		Status:      "success",
		DepositedAt: time.Now(),
		Amount:      amount,
		ReferenceID: refID,
	}
}
